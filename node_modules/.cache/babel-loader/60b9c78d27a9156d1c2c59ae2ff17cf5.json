{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/School/Fitness-FrontEnd/src/components/Routines.js\",\n  _s = $RefreshSig$();\nimport { Router, Link, Route, Routes, useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Routines = props => {\n  _s();\n  const [userRoutines, setUserRoutines] = useState([]);\n  const [name, setName] = useState('');\n  const [isPublic, setIsPublic] = useState('');\n  const [goal, setGoal] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const newRoutine = {\n    name,\n    isPublic,\n    goal\n  };\n  const [onlyUserRoutines, setOnlyUserRoutiens] = useState(false);\n  const token = props.token;\n  const routines = props.routines;\n  const setRoutines = props.setRoutines;\n  const username = props.username;\n  const fetchRoutines = async () => {\n    try {\n      const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n      setRoutines(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchRoutines();\n  }, [routines]);\n  const fetchUsersRoutines = async (username, token) => {\n    try {\n      const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/users/${username}/routines`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const result = await response.json();\n      setUserRoutines(result.data.posts);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const createUserRoutine = async (name, isPublic, goal, token) => {\n    try {\n      const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n        method: \"POST\",\n        body: JSON.stringify({\n          routine: {\n            name,\n            isPublic,\n            goal\n          }\n        })\n      });\n      const result = await response.json();\n      newRoutine.id = result.data.routine.id;\n      setRoutines(prev => [newRoutine, ...prev]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const deleteUserRoutine = async (id, token) => {\n    try {\n      await fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRoutines(prev => prev.filter(routine => id !== routine.id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const routineMatches = routine => {\n    const textToCheck = (routine.name + routine.goal).toLowerCase();\n    return textToCheck.includes(searchValue.toLowerCase());\n  };\n  console.log(routines);\n  const filteredRoutines = routines.filter(routine => {\n    return routineMatches(routine);\n  });\n  const filteredUserRoutines = userRoutines.filter(routine => {\n    return routineMatches(routine);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Routines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Want to add a Routine?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        createUserRoutine(name, isPublic, goal, token);\n        event.target.reset();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Routine Name\",\n        placeholder: \"Routine Name\",\n        className: \"btn btn-grey \",\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"btn btn-white\",\n        onChange: () => {\n          isPublic ? setIsPublic(false) : setIsPublic(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"goal\",\n        placeholder: \"Goal\",\n        className: \"btn btn-grey border\",\n        onChange: event => setGoal(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create Routine\",\n        className: \"btn btn-secondary text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Only User Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"btn btn-white\",\n        onChange: () => {\n          onlyUserRoutines ? setOnlyUserRoutiens(false) : setOnlyUserRoutiens(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n    // : <h3>Please log in...</h3>\n    , /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for an item\",\n      value: searchValue,\n      className: \"bg-white\",\n      onChange: event => setSearchValue(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this),\n    /*#__PURE__*/\n    // onlyUserRoutines ?\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        textDecoration: \"underline\",\n        children: \"Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredRoutines.map(routine => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-3\",\n            children: routine.isPublic ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: routine.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                title: routine.isPublic,\n                children: [\" \", routine.isPublic]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                title: routine.goal,\n                children: [\"$ \", routine.goal]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                title: routine.name,\n                children: \"active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"row mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"edit\",\n                  className: \"btn btn-secondary\",\n                  onClick: event => {\n                    event.preventDefault();\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"Routine Name\",\n                        placeholder: \"Routine Name\",\n                        className: \"bg-light\",\n                        onChange: event => setName(event.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        className: \"btn btn-white\",\n                        onChange: () => {\n                          isPublic ? setIsPublic(false) : setIsPublic(true);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"Goal\",\n                        placeholder: \"Goal\",\n                        className: \"bg-light\",\n                        onChange: event => setGoal(event.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"submit\",\n                        value: \"Create Routine\",\n                        className: \"btn btn-light\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \"delete\",\n                  className: \"btn btn-secondary\",\n                  id: routine.id,\n                  onClick: event => {\n                    event.preventDefault();\n                    deleteUserRoutine(routine.id, token);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 45\n              }, this)]\n            }, routine.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 60\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: routine.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                title: routine.isPublic,\n                children: [\" \", routine.isPublic]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                title: routine.goal,\n                children: [\" \", routine.goal]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                title: routine.name,\n                children: \"Routine not public\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"edit\",\n                  className: \"btn btn-secondary\",\n                  onClick: event => {\n                    event.preventDefault();\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"Routine Name\",\n                        placeholder: \"Routine Name\",\n                        className: \"bg-light\",\n                        onChange: event => setName(event.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        className: \"btn btn-white\",\n                        onChange: () => {\n                          isPublic ? setIsPublic(false) : setIsPublic(true);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"goal\",\n                        className: \"bg-light\",\n                        placeholder: \"Goal\",\n                        onChange: event => setGoal(event.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"submit\",\n                        value: \"Create Routine\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \"delete\",\n                  className: \"btn btn-secondary\",\n                  id: routine.id,\n                  onClick: event => {\n                    event.preventDefault();\n                    deleteUserRoutine(routine.id, token);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 45\n              }, this)]\n            }, routine.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 50\n            }, this)\n          }, routine.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 40\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n    // : <>\n    //     <h2>Routines</h2>\n    //     <ul>\n    //         {\n    //             filteredRoutines.map((routine) => {\n    //                 return (\n    //                     <div key={routine.id} className='row mb-3'>\n    //                         <h3>{routine.name}</h3>\n    //                         <h4 title={routine.isPublic}> {routine.isPublic}</h4>\n    //                         <h4 title={routine.goal}> {routine.goal}</h4>\n    //                         <form className=\"row mb-3\">\n    //                             {/* <Link to={`/routines/view/${routine.id}`}><input type='button' className=\"row mb-3 btn btn-secondary\" value='view'></input></Link> */}\n    //                             <input type='submit' value='edit' className=\"btn btn-secondary\" onClick={(event) => {\n    //                                 event.preventDefault()\n    //                                 return <>\n    //                                     <input type='text' id='Routine Name' placeholder='Routine Name' className=\"bg-light\" onChange={(event) => setName(event.target.value)}></input>\n    //                                     <input type='checkbox' className=\"btn btn-white\" onChange={() => {\n    //                                         isPublic ? setIsPublic(false)\n    //                                             : setIsPublic(true);\n    //                                     }}></input>\n    //                                     <input type='text' id='goal' className=\"bg-light\" placeholder='Goal' onChange={(event) => setGoal(event.target.value)}></input>\n    //                                     <input type='submit' value='Create Routine'></input>\n    //                                 </>\n    //                             }}>\n    //                             </input>\n    //                             <input type='button' value='delete' className=\"btn btn-secondary\" id={routine.id} onClick={(event) => {\n    //                                 event.preventDefault()\n    //                                 deleteUserRoutine(routine.id, token)\n    //                             }}></input>\n    //                         </form>\n\n    //                     </div>\n    //                 )\n    //             })\n\n    //         }\n    //     </ul>\n    // </>\n    ]\n  }, void 0, true);\n};\n_s(Routines, \"ReXsA1NFV0OE1oW4J9NWN9nskDc=\");\n_c = Routines;\nexport default Routines;\nvar _c;\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"names":["Router","Link","Route","Routes","useNavigate","useParams","useEffect","useState","Routines","props","userRoutines","setUserRoutines","name","setName","isPublic","setIsPublic","goal","setGoal","searchValue","setSearchValue","newRoutine","onlyUserRoutines","setOnlyUserRoutiens","token","routines","setRoutines","username","fetchRoutines","response","fetch","headers","data","json","console","log","err","error","fetchUsersRoutines","result","posts","message","createUserRoutine","method","body","JSON","stringify","routine","id","prev","deleteUserRoutine","filter","routineMatches","textToCheck","toLowerCase","includes","filteredRoutines","filteredUserRoutines","event","preventDefault","target","reset","value","map"],"sources":["/Users/user/Desktop/School/Fitness-FrontEnd/src/components/Routines.js"],"sourcesContent":["import { Router, Link, Route, Routes, useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react'\n\nconst Routines = (props) => {\n    const [userRoutines, setUserRoutines] = useState([]);\n    const [name, setName] = useState('');\n    const [isPublic, setIsPublic] = useState('');\n    const [goal, setGoal] = useState('');\n    const [searchValue, setSearchValue] = useState('')\n    const newRoutine = {\n        name,\n        isPublic,\n        goal\n    }\n    const [onlyUserRoutines, setOnlyUserRoutiens] = useState(false)\n    const token = props.token;\n    const routines = props.routines;\n    const setRoutines = props.setRoutines;\n    const username = props.username\n\n\n    const fetchRoutines = async () => {\n        try {\n            const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines',\n                {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                })\n            const data = await response.json();\n            console.log(data)\n            setRoutines(data);\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    useEffect(() => {\n        fetchRoutines()\n    }, [routines])\n\n\n    const fetchUsersRoutines = async (username, token) => {\n        try {\n            const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/users/${username}/routines`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n            })\n            const result = await response.json()\n            setUserRoutines(result.data.posts)\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n    const createUserRoutine = async (name, isPublic, goal, token) => {\n        try {\n            const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n                method: \"POST\",\n                body: JSON.stringify({\n                    routine: {\n                        name,\n                        isPublic,\n                        goal,\n                    }\n                })\n            })\n            const result = await response.json();\n            newRoutine.id = result.data.routine.id\n            setRoutines((prev) => [newRoutine, ...prev]\n\n            )\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    const deleteUserRoutine = async (id, token) => {\n        try {\n            await fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${id}`, {\n                method: \"DELETE\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n            })\n            setRoutines((prev) =>\n                prev.filter((routine) => id !== routine.id)\n            )\n\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n    const routineMatches = (routine) => {\n        const textToCheck = (\n            routine.name + routine.goal\n        ).toLowerCase();\n        return textToCheck.includes(searchValue.toLowerCase());\n    };\n    console.log(routines)\n    const filteredRoutines = routines.filter((routine) => {\n        return routineMatches(routine);\n    });\n\n    const filteredUserRoutines = userRoutines.filter((routine) => {\n        return routineMatches(routine)\n    })\n    return (<>\n\n        <h1>Routines</h1>\n\n        <h2>Want to add a Routine?</h2>\n        {\n            <form onSubmit={(event) => {\n                event.preventDefault()\n                createUserRoutine(name, isPublic, goal, token)\n                event.target.reset()\n            }}>\n                <input type='text' id='Routine Name' placeholder='Routine Name' className=\"btn btn-grey \" onChange={(event) => setName(event.target.value)}></input>\n                <input type='checkbox' className=\"btn btn-white\" onChange={() => {\n                    isPublic ? setIsPublic(false)\n                        : setIsPublic(true);\n                }}></input>\n                <input type='text' id='goal' placeholder='Goal' className=\"btn btn-grey border\" onChange={(event) => setGoal(event.target.value)}></input>\n                <input type='submit' value='Create Routine' className=\"btn btn-secondary text-white\"></input><br />\n                <label>Only User Routines</label>\n                <input type='checkbox' className=\"btn btn-white\" onChange={() => {\n                    onlyUserRoutines ? setOnlyUserRoutiens(false)\n                        : setOnlyUserRoutiens(true);\n                }}></input>\n            </form>\n                // : <h3>Please log in...</h3>\n        }\n        <input\n            type=\"text\"\n            placeholder=\"Search for an item\"\n            value={searchValue}\n            className=\"bg-white\"\n            onChange={(event) => setSearchValue(event.target.value)}\n        />\n\n        {\n            // onlyUserRoutines ?\n                <>\n                    <h2 textDecoration=\"underline\">Routines</h2>\n                    <ul>\n                        {\n\n                            filteredRoutines.map((routine) => {\n                                return <div key={routine.id} className='row mb-3'>\n                                    {\n                                        routine.isPublic ? <div key={routine.id}>\n                                            <h3>{routine.name}</h3>\n                                            <h4 title={routine.isPublic}> {routine.isPublic}</h4>\n                                            <h4 title={routine.goal}>$ {routine.goal}</h4>\n                                            <h4 title={routine.name}>active</h4>\n\n                                            <form className=\"row mb-3\">\n                                                <input type='submit' value='edit' className=\"btn btn-secondary\" onClick={(event) => {\n                                                    event.preventDefault()\n                                                    return <>\n\n                                                        <input type='text' id='Routine Name' placeholder='Routine Name' className=\"bg-light\" onChange={(event) => setName(event.target.value)}></input>\n                                                        <input type='checkbox' className=\"btn btn-white\" onChange={() => {\n                                                            isPublic ? setIsPublic(false)\n                                                                : setIsPublic(true);\n                                                        }}></input>\n                                                        <input type='text' id='Goal' placeholder='Goal' className=\"bg-light\" onChange={(event) => setGoal(event.target.value)}></input>\n                                                        <input type='submit' value='Create Routine' className=\"btn btn-light\"></input>\n                                                    </>\n                                                }}>\n                                                </input>\n                                                <input type='button' value='delete' className=\"btn btn-secondary\" id={routine.id} onClick={(event) => {\n                                                    event.preventDefault()\n                                                    deleteUserRoutine(routine.id, token)\n                                                }}></input>\n                                            </form>\n                                        </div> : <div key={routine.id}>\n                                            <h3>{routine.name}</h3>\n                                            <h4 title={routine.isPublic}> {routine.isPublic}</h4>\n                                            <h4 title={routine.goal}> {routine.goal}</h4>\n                                            <h4 title={routine.name}>Routine not public</h4>\n\n                                            <form>\n                                                <input type='submit' value='edit' className=\"btn btn-secondary\" onClick={(event) => {\n                                                    event.preventDefault()\n                                                    return <>\n\n                                                        <input type='text' id='Routine Name' placeholder='Routine Name' className=\"bg-light\" onChange={(event) => setName(event.target.value)}></input>\n                                                        <input type='checkbox' className=\"btn btn-white\" onChange={() => {\n                                                            isPublic ? setIsPublic(false)\n                                                                : setIsPublic(true);\n                                                        }}></input>\n                                                        <input type='text' id='goal' className=\"bg-light\" placeholder='Goal' onChange={(event) => setGoal(event.target.value)}></input>\n                                                        <input type='submit' value='Create Routine'></input>\n                                                    </>\n                                                }}>\n                                                </input>\n                                                <input type='button' value='delete' className=\"btn btn-secondary\" id={routine.id} onClick={(event) => {\n                                                    event.preventDefault()\n                                                    deleteUserRoutine(routine.id, token)\n                                                }}></input>\n                                            </form>\n                                        </div>\n                                    }</div>\n                            })\n\n                        }\n\n                    </ul>\n\n                </>\n                // : <>\n                //     <h2>Routines</h2>\n                //     <ul>\n                //         {\n                //             filteredRoutines.map((routine) => {\n                //                 return (\n                //                     <div key={routine.id} className='row mb-3'>\n                //                         <h3>{routine.name}</h3>\n                //                         <h4 title={routine.isPublic}> {routine.isPublic}</h4>\n                //                         <h4 title={routine.goal}> {routine.goal}</h4>\n                //                         <form className=\"row mb-3\">\n                //                             {/* <Link to={`/routines/view/${routine.id}`}><input type='button' className=\"row mb-3 btn btn-secondary\" value='view'></input></Link> */}\n                //                             <input type='submit' value='edit' className=\"btn btn-secondary\" onClick={(event) => {\n                //                                 event.preventDefault()\n                //                                 return <>\n                //                                     <input type='text' id='Routine Name' placeholder='Routine Name' className=\"bg-light\" onChange={(event) => setName(event.target.value)}></input>\n                //                                     <input type='checkbox' className=\"btn btn-white\" onChange={() => {\n                //                                         isPublic ? setIsPublic(false)\n                //                                             : setIsPublic(true);\n                //                                     }}></input>\n                //                                     <input type='text' id='goal' className=\"bg-light\" placeholder='Goal' onChange={(event) => setGoal(event.target.value)}></input>\n                //                                     <input type='submit' value='Create Routine'></input>\n                //                                 </>\n                //                             }}>\n                //                             </input>\n                //                             <input type='button' value='delete' className=\"btn btn-secondary\" id={routine.id} onClick={(event) => {\n                //                                 event.preventDefault()\n                //                                 deleteUserRoutine(routine.id, token)\n                //                             }}></input>\n                //                         </form>\n\n                //                     </div>\n                //                 )\n                //             })\n\n                //         }\n                //     </ul>\n                // </>\n            }\n\n    </>)\n\n}\n\n\n\nexport default Routines"],"mappings":"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"},"metadata":{},"sourceType":"module"}